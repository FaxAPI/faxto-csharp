/* 
 * Fax.to REST API client for C#
 *
 * This is Fax.to REST API client for C#.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FaxReceivingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FaxReceivingApiTests
    {
        private FaxReceivingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FaxReceivingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FaxReceivingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FaxReceivingApi
            //Assert.IsInstanceOfType(typeof(FaxReceivingApi), instance, "instance is a FaxReceivingApi");
        }

        
        /// <summary>
        /// Test AreaCodesCountryCodeStateIdGet
        /// </summary>
        [Test]
        public void AreaCodesCountryCodeStateIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? COUNTRY_CODE = null;
            //int? STATE_ID = null;
            //string apiKey = null;
            //var response = instance.AreaCodesCountryCodeStateIdGet(COUNTRY_CODE, STATE_ID, apiKey);
            //Assert.IsInstanceOf<InlineResponse20014> (response, "response is InlineResponse20014");
        }
        
        /// <summary>
        /// Test CountriesCountryCodeDidGroupsGet
        /// </summary>
        [Test]
        public void CountriesCountryCodeDidGroupsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? COUNTRY_CODE = null;
            //int? areaCode = null;
            //string apiKey = null;
            //int? didGroupIds = null;
            //int? stateId = null;
            //int? cityNamePattern = null;
            //var response = instance.CountriesCountryCodeDidGroupsGet(COUNTRY_CODE, areaCode, apiKey, didGroupIds, stateId, cityNamePattern);
            //Assert.IsInstanceOf<InlineResponse20015> (response, "response is InlineResponse20015");
        }
        
        /// <summary>
        /// Test CountriesGet
        /// </summary>
        [Test]
        public void CountriesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //var response = instance.CountriesGet(apiKey);
            //Assert.IsInstanceOf<InlineResponse20012> (response, "response is InlineResponse20012");
        }
        
        /// <summary>
        /// Test IncomingFaxesGet
        /// </summary>
        [Test]
        public void IncomingFaxesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string limit = null;
            //string page = null;
            //var response = instance.IncomingFaxesGet(apiKey, limit, page);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        
        /// <summary>
        /// Test IncomingFaxesRecipientGet
        /// </summary>
        [Test]
        public void IncomingFaxesRecipientGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? recipient = null;
            //string apiKey = null;
            //string limit = null;
            //string page = null;
            //var response = instance.IncomingFaxesRecipientGet(recipient, apiKey, limit, page);
            //Assert.IsInstanceOf<InlineResponse2004> (response, "response is InlineResponse2004");
        }
        
        /// <summary>
        /// Test NumbersGet
        /// </summary>
        [Test]
        public void NumbersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string apiKey = null;
            //string limit = null;
            //string page = null;
            //var response = instance.NumbersGet(apiKey, limit, page);
            //Assert.IsInstanceOf<InlineResponse20017> (response, "response is InlineResponse20017");
        }
        
        /// <summary>
        /// Test ProvisionNumbersGet
        /// </summary>
        [Test]
        public void ProvisionNumbersGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? didGroupId = null;
            //string apiKey = null;
            //var response = instance.ProvisionNumbersGet(didGroupId, apiKey);
            //Assert.IsInstanceOf<InlineResponse20016> (response, "response is InlineResponse20016");
        }
        
        /// <summary>
        /// Test StatesCountryCodeGet
        /// </summary>
        [Test]
        public void StatesCountryCodeGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? COUNTRY_CODE = null;
            //string apiKey = null;
            //var response = instance.StatesCountryCodeGet(COUNTRY_CODE, apiKey);
            //Assert.IsInstanceOf<InlineResponse20013> (response, "response is InlineResponse20013");
        }
        
    }

}

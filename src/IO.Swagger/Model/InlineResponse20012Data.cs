/* 
 * Fax.to REST API client for C#
 *
 * This is Fax.to REST API client for C#.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20012Data
    /// </summary>
    [DataContract]
    public partial class InlineResponse20012Data :  IEquatable<InlineResponse20012Data>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20012Data" /> class.
        /// </summary>
        /// <param name="country">country.</param>
        /// <param name="slug">slug.</param>
        /// <param name="a2Code">a2Code.</param>
        /// <param name="dialCode">dialCode.</param>
        public InlineResponse20012Data(string country = default(string), string slug = default(string), string a2Code = default(string), int? dialCode = default(int?))
        {
            this.Country = country;
            this.Slug = slug;
            this.A2Code = a2Code;
            this.DialCode = dialCode;
        }
        
        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets Slug
        /// </summary>
        [DataMember(Name="slug", EmitDefaultValue=false)]
        public string Slug { get; set; }

        /// <summary>
        /// Gets or Sets A2Code
        /// </summary>
        [DataMember(Name="a2_code", EmitDefaultValue=false)]
        public string A2Code { get; set; }

        /// <summary>
        /// Gets or Sets DialCode
        /// </summary>
        [DataMember(Name="dial_code", EmitDefaultValue=false)]
        public int? DialCode { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20012Data {\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Slug: ").Append(Slug).Append("\n");
            sb.Append("  A2Code: ").Append(A2Code).Append("\n");
            sb.Append("  DialCode: ").Append(DialCode).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20012Data);
        }

        /// <summary>
        /// Returns true if InlineResponse20012Data instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20012Data to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20012Data input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Country == input.Country ||
                    (this.Country != null &&
                    this.Country.Equals(input.Country))
                ) && 
                (
                    this.Slug == input.Slug ||
                    (this.Slug != null &&
                    this.Slug.Equals(input.Slug))
                ) && 
                (
                    this.A2Code == input.A2Code ||
                    (this.A2Code != null &&
                    this.A2Code.Equals(input.A2Code))
                ) && 
                (
                    this.DialCode == input.DialCode ||
                    (this.DialCode != null &&
                    this.DialCode.Equals(input.DialCode))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Country != null)
                    hashCode = hashCode * 59 + this.Country.GetHashCode();
                if (this.Slug != null)
                    hashCode = hashCode * 59 + this.Slug.GetHashCode();
                if (this.A2Code != null)
                    hashCode = hashCode * 59 + this.A2Code.GetHashCode();
                if (this.DialCode != null)
                    hashCode = hashCode * 59 + this.DialCode.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}

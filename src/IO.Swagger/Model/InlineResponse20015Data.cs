/* 
 * Fax.to REST API client for C#
 *
 * This is Fax.to REST API client for C#.
 *
 * OpenAPI spec version: 2.0.0
 * Contact: inquiries@fax.to
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponse20015Data
    /// </summary>
    [DataContract]
    public partial class InlineResponse20015Data :  IEquatable<InlineResponse20015Data>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponse20015Data" /> class.
        /// </summary>
        /// <param name="didGroupId">didGroupId.</param>
        /// <param name="areaCode">areaCode.</param>
        /// <param name="cityName">cityName.</param>
        public InlineResponse20015Data(int? didGroupId = default(int?), string areaCode = default(string), string cityName = default(string))
        {
            this.DidGroupId = didGroupId;
            this.AreaCode = areaCode;
            this.CityName = cityName;
        }
        
        /// <summary>
        /// Gets or Sets DidGroupId
        /// </summary>
        [DataMember(Name="did_group_id", EmitDefaultValue=false)]
        public int? DidGroupId { get; set; }

        /// <summary>
        /// Gets or Sets AreaCode
        /// </summary>
        [DataMember(Name="area_code", EmitDefaultValue=false)]
        public string AreaCode { get; set; }

        /// <summary>
        /// Gets or Sets CityName
        /// </summary>
        [DataMember(Name="city_name", EmitDefaultValue=false)]
        public string CityName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponse20015Data {\n");
            sb.Append("  DidGroupId: ").Append(DidGroupId).Append("\n");
            sb.Append("  AreaCode: ").Append(AreaCode).Append("\n");
            sb.Append("  CityName: ").Append(CityName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponse20015Data);
        }

        /// <summary>
        /// Returns true if InlineResponse20015Data instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponse20015Data to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponse20015Data input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.DidGroupId == input.DidGroupId ||
                    (this.DidGroupId != null &&
                    this.DidGroupId.Equals(input.DidGroupId))
                ) && 
                (
                    this.AreaCode == input.AreaCode ||
                    (this.AreaCode != null &&
                    this.AreaCode.Equals(input.AreaCode))
                ) && 
                (
                    this.CityName == input.CityName ||
                    (this.CityName != null &&
                    this.CityName.Equals(input.CityName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.DidGroupId != null)
                    hashCode = hashCode * 59 + this.DidGroupId.GetHashCode();
                if (this.AreaCode != null)
                    hashCode = hashCode * 59 + this.AreaCode.GetHashCode();
                if (this.CityName != null)
                    hashCode = hashCode * 59 + this.CityName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
